// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu - canActivate composition 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu
    canActivate={true}
  >
    <Styled(Internal)>
      <Styled(MenuItemInternal)
        icon="LogoRings"
      >
        Looker
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)
        icon="Validate"
      >
        Validate
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)
        icon="ChartPie"
      >
        Pizza!
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
    <Styled(Internal)
      canActivate={true}
      label="Cheeses"
    >
      <Styled(MenuItemInternal)>
        Gouda
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)>
        Cheddar
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)>
        Swiss
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
    <Styled(Internal)
      canActivate={false}
    >
      <Styled(MenuItemInternal)
        icon="Beaker"
      >
        Scary Stuff
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
  </Menu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <HotKeys
        handlers={
          Object {
            "moveDown": [Function],
            "moveUp": [Function],
          }
        }
        keyMap={
          Object {
            "moveDown": "down",
            "moveUp": "up",
          }
        }
      >
        <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="LogoRings"
            >
              Looker
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="Validate"
            >
              Validate
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="ChartPie"
            >
              Pizza!
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            canActivate={true}
            label="Cheeses"
          >
            <Styled(MenuItemInternal)>
              Gouda
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Cheddar
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Swiss
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            canActivate={false}
          >
            <Styled(MenuItemInternal)
              icon="Beaker"
            >
              Scary Stuff
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
        </Styled(Styled(Component))>
      </HotKeys>,
      "value": Object {
        "canActivate": true,
        "customizationProps": undefined,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="LogoRings"
            >
              Looker
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="Validate"
            >
              Validate
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="ChartPie"
            >
              Pizza!
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            canActivate={true}
            label="Cheeses"
          >
            <Styled(MenuItemInternal)>
              Gouda
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Cheddar
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Swiss
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            canActivate={false}
          >
            <Styled(MenuItemInternal)
              icon="Beaker"
            >
              Scary Stuff
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
        </Styled(Styled(Component))>,
        "handlers": Object {
          "moveDown": [Function],
          "moveUp": [Function],
        },
        "keyMap": Object {
          "moveDown": "down",
          "moveUp": "up",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
            <Styled(Internal)
              canActivate={true}
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
            <Styled(Internal)
              canActivate={false}
            >
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
          ],
          "innerRef": Object {
            "current": null,
          },
          "is": "ul",
          "role": "menu",
          "tabIndex": -1,
          "userSelect": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(MenuItemInternal)
                  icon="LogoRings"
                >
                  Looker
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)
                  icon="Validate"
                >
                  Validate
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)
                  icon="ChartPie"
                >
                  Pizza!
                </Styled(MenuItemInternal)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Looker",
                  "icon": "LogoRings",
                },
                "ref": null,
                "rendered": "Looker",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Validate",
                  "icon": "Validate",
                },
                "ref": null,
                "rendered": "Validate",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Pizza!",
                  "icon": "ChartPie",
                },
                "ref": null,
                "rendered": "Pizza!",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "canActivate": true,
              "children": Array [
                <Styled(MenuItemInternal)>
                  Gouda
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)>
                  Cheddar
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)>
                  Swiss
                </Styled(MenuItemInternal)>,
              ],
              "label": "Cheeses",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Gouda",
                },
                "ref": null,
                "rendered": "Gouda",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cheddar",
                },
                "ref": null,
                "rendered": "Cheddar",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Swiss",
                },
                "ref": null,
                "rendered": "Swiss",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "canActivate": false,
              "children": <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Scary Stuff",
                "icon": "Beaker",
              },
              "ref": null,
              "rendered": "Scary Stuff",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {},
        "_currentValue2": Object {},
        "unstable_read": [Function],
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <HotKeys
          handlers={
            Object {
              "moveDown": [Function],
              "moveUp": [Function],
            }
          }
          keyMap={
            Object {
              "moveDown": "down",
              "moveUp": "up",
            }
          }
        >
          <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              canActivate={true}
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              canActivate={false}
            >
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
          </Styled(Styled(Component))>
        </HotKeys>,
        "value": Object {
          "canActivate": true,
          "customizationProps": undefined,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              canActivate={true}
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              canActivate={false}
            >
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
          </Styled(Styled(Component))>,
          "handlers": Object {
            "moveDown": [Function],
            "moveUp": [Function],
          },
          "keyMap": Object {
            "moveDown": "down",
            "moveUp": "up",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Internal)>
                <Styled(MenuItemInternal)
                  icon="LogoRings"
                >
                  Looker
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)
                  icon="Validate"
                >
                  Validate
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)
                  icon="ChartPie"
                >
                  Pizza!
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
              <Styled(Internal)
                canActivate={true}
                label="Cheeses"
              >
                <Styled(MenuItemInternal)>
                  Gouda
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)>
                  Cheddar
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)>
                  Swiss
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
              <Styled(Internal)
                canActivate={false}
              >
                <Styled(MenuItemInternal)
                  icon="Beaker"
                >
                  Scary Stuff
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
            ],
            "innerRef": Object {
              "current": null,
            },
            "is": "ul",
            "role": "menu",
            "tabIndex": -1,
            "userSelect": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(MenuItemInternal)
                    icon="LogoRings"
                  >
                    Looker
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)
                    icon="Validate"
                  >
                    Validate
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)
                    icon="ChartPie"
                  >
                    Pizza!
                  </Styled(MenuItemInternal)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Looker",
                    "icon": "LogoRings",
                  },
                  "ref": null,
                  "rendered": "Looker",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Validate",
                    "icon": "Validate",
                  },
                  "ref": null,
                  "rendered": "Validate",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Pizza!",
                    "icon": "ChartPie",
                  },
                  "ref": null,
                  "rendered": "Pizza!",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "canActivate": true,
                "children": Array [
                  <Styled(MenuItemInternal)>
                    Gouda
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)>
                    Cheddar
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)>
                    Swiss
                  </Styled(MenuItemInternal)>,
                ],
                "label": "Cheeses",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Gouda",
                  },
                  "ref": null,
                  "rendered": "Gouda",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cheddar",
                  },
                  "ref": null,
                  "rendered": "Cheddar",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Swiss",
                  },
                  "ref": null,
                  "rendered": "Swiss",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "canActivate": false,
                "children": <Styled(MenuItemInternal)
                  icon="Beaker"
                >
                  Scary Stuff
                </Styled(MenuItemInternal)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Scary Stuff",
                  "icon": "Beaker",
                },
                "ref": null,
                "rendered": "Scary Stuff",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {},
          "_currentValue2": Object {},
          "unstable_read": [Function],
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Menu - composed 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu>
    <Styled(Internal)>
      <Styled(MenuItemInternal)
        icon="LogoRings"
      >
        Looker
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)
        icon="Validate"
      >
        Validate
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)
        icon="ChartPie"
      >
        Pizza!
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
    <Styled(Internal)
      canActivate={true}
      label="Cheeses"
    >
      <Styled(MenuItemInternal)>
        Gouda
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)>
        Cheddar
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)>
        Swiss
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
    <Styled(Internal)>
      <Styled(MenuItemInternal)
        icon="Beaker"
      >
        Scary Stuff
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
  </Menu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <HotKeys
        handlers={
          Object {
            "moveDown": [Function],
            "moveUp": [Function],
          }
        }
        keyMap={
          Object {
            "moveDown": "down",
            "moveUp": "up",
          }
        }
      >
        <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="LogoRings"
            >
              Looker
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="Validate"
            >
              Validate
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="ChartPie"
            >
              Pizza!
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            canActivate={true}
            label="Cheeses"
          >
            <Styled(MenuItemInternal)>
              Gouda
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Cheddar
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Swiss
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="Beaker"
            >
              Scary Stuff
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
        </Styled(Styled(Component))>
      </HotKeys>,
      "value": Object {
        "canActivate": undefined,
        "customizationProps": undefined,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="LogoRings"
            >
              Looker
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="Validate"
            >
              Validate
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="ChartPie"
            >
              Pizza!
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            canActivate={true}
            label="Cheeses"
          >
            <Styled(MenuItemInternal)>
              Gouda
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Cheddar
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Swiss
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="Beaker"
            >
              Scary Stuff
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
        </Styled(Styled(Component))>,
        "handlers": Object {
          "moveDown": [Function],
          "moveUp": [Function],
        },
        "keyMap": Object {
          "moveDown": "down",
          "moveUp": "up",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
            <Styled(Internal)
              canActivate={true}
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
          ],
          "innerRef": Object {
            "current": null,
          },
          "is": "ul",
          "role": "menu",
          "tabIndex": -1,
          "userSelect": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(MenuItemInternal)
                  icon="LogoRings"
                >
                  Looker
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)
                  icon="Validate"
                >
                  Validate
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)
                  icon="ChartPie"
                >
                  Pizza!
                </Styled(MenuItemInternal)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Looker",
                  "icon": "LogoRings",
                },
                "ref": null,
                "rendered": "Looker",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Validate",
                  "icon": "Validate",
                },
                "ref": null,
                "rendered": "Validate",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Pizza!",
                  "icon": "ChartPie",
                },
                "ref": null,
                "rendered": "Pizza!",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "canActivate": true,
              "children": Array [
                <Styled(MenuItemInternal)>
                  Gouda
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)>
                  Cheddar
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)>
                  Swiss
                </Styled(MenuItemInternal)>,
              ],
              "label": "Cheeses",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Gouda",
                },
                "ref": null,
                "rendered": "Gouda",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cheddar",
                },
                "ref": null,
                "rendered": "Cheddar",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Swiss",
                },
                "ref": null,
                "rendered": "Swiss",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Scary Stuff",
                "icon": "Beaker",
              },
              "ref": null,
              "rendered": "Scary Stuff",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {},
        "_currentValue2": Object {},
        "unstable_read": [Function],
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <HotKeys
          handlers={
            Object {
              "moveDown": [Function],
              "moveUp": [Function],
            }
          }
          keyMap={
            Object {
              "moveDown": "down",
              "moveUp": "up",
            }
          }
        >
          <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              canActivate={true}
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
          </Styled(Styled(Component))>
        </HotKeys>,
        "value": Object {
          "canActivate": undefined,
          "customizationProps": undefined,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              canActivate={true}
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
          </Styled(Styled(Component))>,
          "handlers": Object {
            "moveDown": [Function],
            "moveUp": [Function],
          },
          "keyMap": Object {
            "moveDown": "down",
            "moveUp": "up",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Internal)>
                <Styled(MenuItemInternal)
                  icon="LogoRings"
                >
                  Looker
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)
                  icon="Validate"
                >
                  Validate
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)
                  icon="ChartPie"
                >
                  Pizza!
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
              <Styled(Internal)
                canActivate={true}
                label="Cheeses"
              >
                <Styled(MenuItemInternal)>
                  Gouda
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)>
                  Cheddar
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)>
                  Swiss
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
              <Styled(Internal)>
                <Styled(MenuItemInternal)
                  icon="Beaker"
                >
                  Scary Stuff
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
            ],
            "innerRef": Object {
              "current": null,
            },
            "is": "ul",
            "role": "menu",
            "tabIndex": -1,
            "userSelect": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(MenuItemInternal)
                    icon="LogoRings"
                  >
                    Looker
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)
                    icon="Validate"
                  >
                    Validate
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)
                    icon="ChartPie"
                  >
                    Pizza!
                  </Styled(MenuItemInternal)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Looker",
                    "icon": "LogoRings",
                  },
                  "ref": null,
                  "rendered": "Looker",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Validate",
                    "icon": "Validate",
                  },
                  "ref": null,
                  "rendered": "Validate",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Pizza!",
                    "icon": "ChartPie",
                  },
                  "ref": null,
                  "rendered": "Pizza!",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "canActivate": true,
                "children": Array [
                  <Styled(MenuItemInternal)>
                    Gouda
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)>
                    Cheddar
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)>
                    Swiss
                  </Styled(MenuItemInternal)>,
                ],
                "label": "Cheeses",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Gouda",
                  },
                  "ref": null,
                  "rendered": "Gouda",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cheddar",
                  },
                  "ref": null,
                  "rendered": "Cheddar",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Swiss",
                  },
                  "ref": null,
                  "rendered": "Swiss",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(MenuItemInternal)
                  icon="Beaker"
                >
                  Scary Stuff
                </Styled(MenuItemInternal)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Scary Stuff",
                  "icon": "Beaker",
                },
                "ref": null,
                "rendered": "Scary Stuff",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {},
          "_currentValue2": Object {},
          "unstable_read": [Function],
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Menu - focusOnMount 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu
    focusOnMount={true}
  >
    <Styled(MenuItemInternal)>
      boo!
    </Styled(MenuItemInternal)>
  </Menu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <HotKeys
        handlers={
          Object {
            "moveDown": [Function],
            "moveUp": [Function],
          }
        }
        keyMap={
          Object {
            "moveDown": "down",
            "moveUp": "up",
          }
        }
      >
        <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(MenuItemInternal)>
            boo!
          </Styled(MenuItemInternal)>
        </Styled(Styled(Component))>
      </HotKeys>,
      "value": Object {
        "canActivate": undefined,
        "customizationProps": undefined,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(MenuItemInternal)>
            boo!
          </Styled(MenuItemInternal)>
        </Styled(Styled(Component))>,
        "handlers": Object {
          "moveDown": [Function],
          "moveUp": [Function],
        },
        "keyMap": Object {
          "moveDown": "down",
          "moveUp": "up",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(MenuItemInternal)>
            boo!
          </Styled(MenuItemInternal)>,
          "innerRef": Object {
            "current": null,
          },
          "is": "ul",
          "role": "menu",
          "tabIndex": -1,
          "userSelect": "none",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "boo!",
          },
          "ref": null,
          "rendered": "boo!",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {},
        "_currentValue2": Object {},
        "unstable_read": [Function],
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <HotKeys
          handlers={
            Object {
              "moveDown": [Function],
              "moveUp": [Function],
            }
          }
          keyMap={
            Object {
              "moveDown": "down",
              "moveUp": "up",
            }
          }
        >
          <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(MenuItemInternal)>
              boo!
            </Styled(MenuItemInternal)>
          </Styled(Styled(Component))>
        </HotKeys>,
        "value": Object {
          "canActivate": undefined,
          "customizationProps": undefined,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(MenuItemInternal)>
              boo!
            </Styled(MenuItemInternal)>
          </Styled(Styled(Component))>,
          "handlers": Object {
            "moveDown": [Function],
            "moveUp": [Function],
          },
          "keyMap": Object {
            "moveDown": "down",
            "moveUp": "up",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(MenuItemInternal)>
              boo!
            </Styled(MenuItemInternal)>,
            "innerRef": Object {
              "current": null,
            },
            "is": "ul",
            "role": "menu",
            "tabIndex": -1,
            "userSelect": "none",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "boo!",
            },
            "ref": null,
            "rendered": "boo!",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {},
          "_currentValue2": Object {},
          "unstable_read": [Function],
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Menu - menu customization 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu
    customizationProps={
      Object {
        "activated": Object {
          "color": "#0087e1",
        },
        "bg": "#4F2ABA",
        "color": "#BFB2FF",
        "current": Object {
          "bg": "#BFB2FF",
          "color": "#1E1047",
          "icon": Object {
            "color": "#4F2ABA",
          },
        },
        "hover": Object {
          "bg": "#341C7A",
          "color": "#FFFFFF",
          "icon": Object {
            "color": "#E8E5FF",
          },
        },
        "icon": Object {
          "color": "#9785F2",
          "size": 20,
        },
        "marker": Object {
          "color": "#1E1047",
          "size": 10,
        },
      }
    }
  >
    <Styled(Internal)>
      <Styled(MenuItemInternal)
        icon="LogoRings"
      >
        Looker
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)
        icon="Validate"
      >
        Validate
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)
        icon="ChartPie"
      >
        Pizza!
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
    <Styled(Internal)
      label="Cheeses"
    >
      <Styled(MenuItemInternal)>
        Gouda
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)>
        Cheddar
      </Styled(MenuItemInternal)>
      <Styled(MenuItemInternal)>
        Swiss
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
    <Styled(Internal)>
      <Styled(MenuItemInternal)
        icon="Beaker"
      >
        Scary Stuff
      </Styled(MenuItemInternal)>
    </Styled(Internal)>
  </Menu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <HotKeys
        handlers={
          Object {
            "moveDown": [Function],
            "moveUp": [Function],
          }
        }
        keyMap={
          Object {
            "moveDown": "down",
            "moveUp": "up",
          }
        }
      >
        <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="LogoRings"
            >
              Looker
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="Validate"
            >
              Validate
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="ChartPie"
            >
              Pizza!
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            label="Cheeses"
          >
            <Styled(MenuItemInternal)>
              Gouda
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Cheddar
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Swiss
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="Beaker"
            >
              Scary Stuff
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
        </Styled(Styled(Component))>
      </HotKeys>,
      "value": Object {
        "canActivate": undefined,
        "customizationProps": Object {
          "activated": Object {
            "color": "#0087e1",
          },
          "bg": "#4F2ABA",
          "color": "#BFB2FF",
          "current": Object {
            "bg": "#BFB2FF",
            "color": "#1E1047",
            "icon": Object {
              "color": "#4F2ABA",
            },
          },
          "hover": Object {
            "bg": "#341C7A",
            "color": "#FFFFFF",
            "icon": Object {
              "color": "#E8E5FF",
            },
          },
          "icon": Object {
            "color": "#9785F2",
            "size": 20,
          },
          "marker": Object {
            "color": "#1E1047",
            "size": 10,
          },
        },
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="LogoRings"
            >
              Looker
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="Validate"
            >
              Validate
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)
              icon="ChartPie"
            >
              Pizza!
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)
            label="Cheeses"
          >
            <Styled(MenuItemInternal)>
              Gouda
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Cheddar
            </Styled(MenuItemInternal)>
            <Styled(MenuItemInternal)>
              Swiss
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
          <Styled(Internal)>
            <Styled(MenuItemInternal)
              icon="Beaker"
            >
              Scary Stuff
            </Styled(MenuItemInternal)>
          </Styled(Internal)>
        </Styled(Styled(Component))>,
        "handlers": Object {
          "moveDown": [Function],
          "moveUp": [Function],
        },
        "keyMap": Object {
          "moveDown": "down",
          "moveUp": "up",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
            <Styled(Internal)
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>,
          ],
          "innerRef": Object {
            "current": null,
          },
          "is": "ul",
          "role": "menu",
          "tabIndex": -1,
          "userSelect": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(MenuItemInternal)
                  icon="LogoRings"
                >
                  Looker
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)
                  icon="Validate"
                >
                  Validate
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)
                  icon="ChartPie"
                >
                  Pizza!
                </Styled(MenuItemInternal)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Looker",
                  "icon": "LogoRings",
                },
                "ref": null,
                "rendered": "Looker",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Validate",
                  "icon": "Validate",
                },
                "ref": null,
                "rendered": "Validate",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Pizza!",
                  "icon": "ChartPie",
                },
                "ref": null,
                "rendered": "Pizza!",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(MenuItemInternal)>
                  Gouda
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)>
                  Cheddar
                </Styled(MenuItemInternal)>,
                <Styled(MenuItemInternal)>
                  Swiss
                </Styled(MenuItemInternal)>,
              ],
              "label": "Cheeses",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Gouda",
                },
                "ref": null,
                "rendered": "Gouda",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cheddar",
                },
                "ref": null,
                "rendered": "Cheddar",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Swiss",
                },
                "ref": null,
                "rendered": "Swiss",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Scary Stuff",
                "icon": "Beaker",
              },
              "ref": null,
              "rendered": "Scary Stuff",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {},
        "_currentValue2": Object {},
        "unstable_read": [Function],
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <HotKeys
          handlers={
            Object {
              "moveDown": [Function],
              "moveUp": [Function],
            }
          }
          keyMap={
            Object {
              "moveDown": "down",
              "moveUp": "up",
            }
          }
        >
          <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
          </Styled(Styled(Component))>
        </HotKeys>,
        "value": Object {
          "canActivate": undefined,
          "customizationProps": Object {
            "activated": Object {
              "color": "#0087e1",
            },
            "bg": "#4F2ABA",
            "color": "#BFB2FF",
            "current": Object {
              "bg": "#BFB2FF",
              "color": "#1E1047",
              "icon": Object {
                "color": "#4F2ABA",
              },
            },
            "hover": Object {
              "bg": "#341C7A",
              "color": "#FFFFFF",
              "icon": Object {
                "color": "#E8E5FF",
              },
            },
            "icon": Object {
              "color": "#9785F2",
              "size": 20,
            },
            "marker": Object {
              "color": "#1E1047",
              "size": 10,
            },
          },
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="LogoRings"
              >
                Looker
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="Validate"
              >
                Validate
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)
                icon="ChartPie"
              >
                Pizza!
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)
              label="Cheeses"
            >
              <Styled(MenuItemInternal)>
                Gouda
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Cheddar
              </Styled(MenuItemInternal)>
              <Styled(MenuItemInternal)>
                Swiss
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
            <Styled(Internal)>
              <Styled(MenuItemInternal)
                icon="Beaker"
              >
                Scary Stuff
              </Styled(MenuItemInternal)>
            </Styled(Internal)>
          </Styled(Styled(Component))>,
          "handlers": Object {
            "moveDown": [Function],
            "moveUp": [Function],
          },
          "keyMap": Object {
            "moveDown": "down",
            "moveUp": "up",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Internal)>
                <Styled(MenuItemInternal)
                  icon="LogoRings"
                >
                  Looker
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)
                  icon="Validate"
                >
                  Validate
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)
                  icon="ChartPie"
                >
                  Pizza!
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
              <Styled(Internal)
                label="Cheeses"
              >
                <Styled(MenuItemInternal)>
                  Gouda
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)>
                  Cheddar
                </Styled(MenuItemInternal)>
                <Styled(MenuItemInternal)>
                  Swiss
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
              <Styled(Internal)>
                <Styled(MenuItemInternal)
                  icon="Beaker"
                >
                  Scary Stuff
                </Styled(MenuItemInternal)>
              </Styled(Internal)>,
            ],
            "innerRef": Object {
              "current": null,
            },
            "is": "ul",
            "role": "menu",
            "tabIndex": -1,
            "userSelect": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(MenuItemInternal)
                    icon="LogoRings"
                  >
                    Looker
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)
                    icon="Validate"
                  >
                    Validate
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)
                    icon="ChartPie"
                  >
                    Pizza!
                  </Styled(MenuItemInternal)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Looker",
                    "icon": "LogoRings",
                  },
                  "ref": null,
                  "rendered": "Looker",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Validate",
                    "icon": "Validate",
                  },
                  "ref": null,
                  "rendered": "Validate",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Pizza!",
                    "icon": "ChartPie",
                  },
                  "ref": null,
                  "rendered": "Pizza!",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(MenuItemInternal)>
                    Gouda
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)>
                    Cheddar
                  </Styled(MenuItemInternal)>,
                  <Styled(MenuItemInternal)>
                    Swiss
                  </Styled(MenuItemInternal)>,
                ],
                "label": "Cheeses",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Gouda",
                  },
                  "ref": null,
                  "rendered": "Gouda",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cheddar",
                  },
                  "ref": null,
                  "rendered": "Cheddar",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Swiss",
                  },
                  "ref": null,
                  "rendered": "Swiss",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(MenuItemInternal)
                  icon="Beaker"
                >
                  Scary Stuff
                </Styled(MenuItemInternal)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Scary Stuff",
                  "icon": "Beaker",
                },
                "ref": null,
                "rendered": "Scary Stuff",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {},
          "_currentValue2": Object {},
          "unstable_read": [Function],
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Menu 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu>
    <Styled(MenuItemInternal)>
      boo!
    </Styled(MenuItemInternal)>
    <Styled(MenuLinkInternal)
      href="test"
    >
      boo!
    </Styled(MenuLinkInternal)>
  </Menu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <HotKeys
        handlers={
          Object {
            "moveDown": [Function],
            "moveUp": [Function],
          }
        }
        keyMap={
          Object {
            "moveDown": "down",
            "moveUp": "up",
          }
        }
      >
        <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(MenuItemInternal)>
            boo!
          </Styled(MenuItemInternal)>
          <Styled(MenuLinkInternal)
            href="test"
          >
            boo!
          </Styled(MenuLinkInternal)>
        </Styled(Styled(Component))>
      </HotKeys>,
      "value": Object {
        "canActivate": undefined,
        "customizationProps": undefined,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Styled(Component))
          innerRef={
            Object {
              "current": null,
            }
          }
          is="ul"
          role="menu"
          tabIndex={-1}
          userSelect="none"
        >
          <Styled(MenuItemInternal)>
            boo!
          </Styled(MenuItemInternal)>
          <Styled(MenuLinkInternal)
            href="test"
          >
            boo!
          </Styled(MenuLinkInternal)>
        </Styled(Styled(Component))>,
        "handlers": Object {
          "moveDown": [Function],
          "moveUp": [Function],
        },
        "keyMap": Object {
          "moveDown": "down",
          "moveUp": "up",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(MenuItemInternal)>
              boo!
            </Styled(MenuItemInternal)>,
            <Styled(MenuLinkInternal)
              href="test"
            >
              boo!
            </Styled(MenuLinkInternal)>,
          ],
          "innerRef": Object {
            "current": null,
          },
          "is": "ul",
          "role": "menu",
          "tabIndex": -1,
          "userSelect": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "boo!",
            },
            "ref": null,
            "rendered": "boo!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "boo!",
              "href": "test",
            },
            "ref": null,
            "rendered": "boo!",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {},
        "_currentValue2": Object {},
        "unstable_read": [Function],
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <HotKeys
          handlers={
            Object {
              "moveDown": [Function],
              "moveUp": [Function],
            }
          }
          keyMap={
            Object {
              "moveDown": "down",
              "moveUp": "up",
            }
          }
        >
          <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(MenuItemInternal)>
              boo!
            </Styled(MenuItemInternal)>
            <Styled(MenuLinkInternal)
              href="test"
            >
              boo!
            </Styled(MenuLinkInternal)>
          </Styled(Styled(Component))>
        </HotKeys>,
        "value": Object {
          "canActivate": undefined,
          "customizationProps": undefined,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Styled(Component))
            innerRef={
              Object {
                "current": null,
              }
            }
            is="ul"
            role="menu"
            tabIndex={-1}
            userSelect="none"
          >
            <Styled(MenuItemInternal)>
              boo!
            </Styled(MenuItemInternal)>
            <Styled(MenuLinkInternal)
              href="test"
            >
              boo!
            </Styled(MenuLinkInternal)>
          </Styled(Styled(Component))>,
          "handlers": Object {
            "moveDown": [Function],
            "moveUp": [Function],
          },
          "keyMap": Object {
            "moveDown": "down",
            "moveUp": "up",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(MenuItemInternal)>
                boo!
              </Styled(MenuItemInternal)>,
              <Styled(MenuLinkInternal)
                href="test"
              >
                boo!
              </Styled(MenuLinkInternal)>,
            ],
            "innerRef": Object {
              "current": null,
            },
            "is": "ul",
            "role": "menu",
            "tabIndex": -1,
            "userSelect": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "boo!",
              },
              "ref": null,
              "rendered": "boo!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "boo!",
                "href": "test",
              },
              "ref": null,
              "rendered": "boo!",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {},
          "_currentValue2": Object {},
          "unstable_read": [Function],
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
